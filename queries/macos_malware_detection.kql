// DESCRIPTION:
// Detection of malware and suspicious code execution on macOS systems using both antivirus alerts and behavioural indicators.
// TECHNICAL:
// This query combines two detection methods: (1) Standard antivirus/EDR detections from DeviceEvents with actions =~ AntivirusMalwareDetected and SuspiciousFileQuarantined, and (2) Behavioural detections looking for scripts and executables running from temporary directories with suspicious command parameters related to network connections or code execution.
// MITRE_ATTACK:
// T1059.004 (Unix Shell), T1059.006 (Python), T1105 (Ingress Tool Transfer), T1573 (Encrypted Channel)
// IMPACT:
// Systems may be compromised with malware that could lead to data theft, ransomware, or becoming part of a botnet.
// REMEDIATION:
// Isolate affected systems, analyse the detected malware, remove malicious files, and investigate how the infection occurred.
// END_DESCRIPTION

// API-compatible query with standardized time filter
let timeWindow = ago(7d);

// First part: AV detections
DeviceEvents
| where Timestamp > timeWindow
| where ActionType in (
    "AntivirusMalwareDetected", 
    "SuspiciousFileRemoved", 
    "SuspiciousFileQuarantined", 
    "ProcessBlockedForExecution"
)
| extend 
    ThreatName = tostring(parse_json(AdditionalFields).ThreatName),
    DetectionSource = tostring(parse_json(AdditionalFields).DetectionSource)
| project
    Timestamp,
    DeviceName,
    ActionType,
    FileName,
    FolderPath,
    SHA256,
    InitiatingProcessFileName,
    InitiatingProcessFolderPath,
    InitiatingProcessAccountName,
    ThreatName,
    DetectionSource,
    Source = "AV Detection",
    ReportId = hash_sha256(strcat(DeviceName, FileName, FolderPath, tostring(Timestamp)))
// Union with behavioral detections
| union (
    DeviceProcessEvents
    | where Timestamp > timeWindow
    | where FolderPath has_any (
        "/tmp/", "/private/tmp/", "/var/tmp/", 
        "/private/var/tmp/", "/Library/Application Support/"
    )
    | where not(InitiatingProcessFolderPath has_any (
        "/Applications/", "/System/Library/"
    ))
    | where FileName has_any (
        ".py", ".sh", ".bin", ".js", ".pl", ".rb", 
        "python", "perl", "ruby", "bash", "sh", "zsh"
    )
    | where ProcessCommandLine has_any (
        "curl", "wget", "nc ", "ncat ", "python -m", 
        "import socket", "connect()", "exec()", "eval()", 
        "system()", "popen()", "subprocess", "spawn()", "fork()"
    )
    | project
        Timestamp,
        DeviceName,
        AccountName,
        ProcessCommandLine,
        FileName,
        FolderPath,
        SHA256,
        InitiatingProcessFileName,
        InitiatingProcessCommandLine,
        Source = "Behavioral Detection",
        ReportId = hash_sha256(strcat(DeviceName, FileName, ProcessCommandLine, tostring(Timestamp)))
)
